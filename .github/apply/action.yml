name: "CD - Infra Base"
description: "Validar plano de subida para deploy de insfraestrutura base"
inputs:
  terraform_version:
    description: "Versão do Terraform"
    required: true
    default: "1.6.5"
  terraform_directory:
    description: "Diretório do Terraform"
    required: true
  pr_number:
    description: "Número da PR"
    required: true
  aws_region:
    description: "Região da AWS"
    required: true
  aws_access_key_id:
    description: "ID da chave de acesso da AWS"
    required: true
  aws_secret_access_key:
    description: "Chave de acesso secreta da AWS"
    required: true
  aws_session_token:
    description: "Token de sessão da AWS"
    required: true
  github_token:
    description: "Token de acesso ao GitHub"
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-session-token: ${{ inputs.aws_session_token }}
        aws-region: ${{ inputs.aws_region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform init

    - name: Terraform Validate
      id: validate
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform validate

    - name: Download Plan
      id: download-plan
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{ inputs.github_token }}
        workflow: plan.yaml
        pr: ${{ inputs.pr_id }}
        name: ${{ inputs.pr_id }}-tf-plan
        path: ${{ inputs.terraform_directory }}

    - name: Terraform Apply
      id: apply
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        echo 'apply<<EOF' >> $GITHUB_OUTPUT
        terraform apply -input=false -no-color --var-file="tfvars/deploy.tfvars" tfplan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Comment PR
      id: comment
      uses: actions/github-script@v4
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          github.issues.createComment({
            issue_number: ${{ inputs.pr_number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `
              Terraform Apply:

              \`\`\`
              ${{ steps.apply.outputs.apply }}
              \`\`\`
            `
          })

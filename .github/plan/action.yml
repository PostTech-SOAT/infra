name: "CI - Infra Base"
description: "Validar plano de subida para deploy de insfraestrutura base"
inputs:
  terraform_version:
    description: "Versão do Terraform"
    required: true
    default: "1.6.5"
  terraform_directory:
    description: "Diretório do Terraform"
    required: true
  pr_number:
    description: "Número da PR"
    required: true
  aws_region:
    description: "Região da AWS"
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ inputs.aws_region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ inputs.terraform_version }}
        terraform_wrapper: false

    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform init

    - name: Terraform Validate
      id: validate
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform validate

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: |
        terraform plan -no-color -out=tfplan

    # - name: Comment PR
    #   id: Comentário da PR
    #   uses: actions/github-script@v4
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     script: |
    #       github.issues.createComment({
    #         issue_number: ${{ inputs.pr_number }},
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: 'Plano de execução da infraestrutura base realizado com sucesso!'
    #       })
